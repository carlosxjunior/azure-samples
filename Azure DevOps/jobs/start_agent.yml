parameters:
- name: azureSubscription
  type: string
  default: 'AzureSubscriptionServiceConnection'
- name: subscriptionId
  type: string
  default: '76c37c1c-f2c8-42b5-aa22-0696f45d8f37'
- name: rgName
  type: string
  default: 'rg-shared'
- name: vmName
  type: string
  default: 'vm-agentpool-shared-001'
- name: apiVersion
  type: string
  default: '2024-07-01'

jobs:
- job: StartVM
  displayName: "Start Self-Hosted Agent VM"
  pool: server # Agentless job
  steps:
  - task: AzureCLI@2
    displayName: "Start VM"
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      scriptType: 'ps'
      scriptLocation: 'inlineScript'
      inlineScript: |
        az vm start --resource-group ${{ parameters.rgName }} --name ${{ parameters.vmName }}

  - task: AzureCLI@2
    displayName: "Wait for VM to Start"
    inputs:
      azureSubscription: ${{ parameters.azureSubscription }}
      scriptType: 'ps'
      scriptLocation: 'inlineScript'
      inlineScript: |
        $maxRetries = 20
        $retryCount = 0
        $vmState = ""
        while ($retryCount -lt $maxRetries -and $vmState -ne "VM running") {
          $vmState = az vm get-instance-view --resource-group ${{ parameters.rgName }} --name ${{ parameters.vmName }} --query "instanceView.statuses[?starts_with(code, 'PowerState/')].displayStatus" -o tsv
          if ($vmState -ne "VM running") {
            Write-Host "VM is not running yet. Retrying in 15 seconds..."
            Start-Sleep -Seconds 15
            $retryCount++
          }
        }

        if ($vmState -ne "VM running") {
          Write-Error "VM failed to start within the timeout period."
          exit 1
        }
        Write-Host "VM is running."


