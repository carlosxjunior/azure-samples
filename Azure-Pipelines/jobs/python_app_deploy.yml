parameters:
- name: pythonVersion
  type: string
  default: '3.x'
- name: environmentName
  type: string
- name: projectDirectory
  type: string


jobs:
- deployment: VMDeploy
  displayName: Deploy to VM
  environment:
    name: ${{ parameters.environmentName }}
    resourceType: VirtualMachine
  strategy:
    runOnce:
      # Pre deployment steps
      preDeploy:
        steps:
        - download: current
          artifact: drop
          displayName: 'Download artifact'
      # Deployment steps
      deploy:
        steps:
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
                echo "Starting deployment script run"
                sudo rm -rf ${{ parameters.projectDirectory }}/*
                mkdir -p ${{ parameters.projectDirectory }}
                sudo apt install unzip
                unzip $(Pipeline.Workspace)/drop/$(Build.BuildId)-${{ parameters.pythonVersion }}.zip -d ${{ parameters.projectDirectory }}
                cd ${{ parameters.projectDirectory }}
                python3 -m venv myenv
                source myenv/bin/activate
                pip install -r requirements.txt
      on:
        failure:
          steps:
          - script: echo Restore from backup! This is on failure
        success:
          steps:
          - script: echo Notify! This is on success